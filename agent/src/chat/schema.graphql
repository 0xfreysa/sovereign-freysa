directive @isAuthorized on FIELD_DEFINITION

scalar DateTime
scalar JSON

type Query {
  getChats(first: Int! = 10, offset: Int! = 0): [Chat!]! @isAuthorized
  getChat(id: ID!): Chat! @isAuthorized
}

input WidgetInteractionInput {
  interaction: JSON!
  widgetId: String!
  messageId: String!
}

type Mutation {
  createChat(name: String!): Chat! @isAuthorized
  sendMessage(chatId: ID!, text: String!): Message! @isAuthorized
  updateTitle(chatId: ID!, title: String!): Chat! @isAuthorized
  deleteChat(chatId: ID!): Chat! @isAuthorized
  widgetInteraction(interaction: WidgetInteractionInput!): WidgetInteraction!
    @isAuthorized
}

type WidgetInteraction {
  widgetId: String!
  answer: String
  options: [String]
  createdAt: DateTime!
}

type Subscription {
  messageAdded(chatId: ID!): Message! @isAuthorized
}

type ToolCall {
  id: String!
  name: String!
  isCompleted: Boolean!
}

type ToolArg {
  name: String!
  arguments: String!
}

type Chat {
  id: ID!
  name: String!
  messages: [Message!]!
  createdAt: DateTime!
}

type Message {
  id: ID!
  text: String
  imageUrls: [String!]!
  role: Role!
  toolCalls: [ToolCall!]!
  toolArgs: [ToolArg!]
  createdAt: DateTime!
  widgetInteraction: WidgetInteraction
}

enum Role {
  USER
  ASSISTANT
}
